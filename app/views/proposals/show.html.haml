%p#notice= notice
%table
  %tr
    %th Name
    %td= @proposal.name
  %tr
    %th Software
    %td= @proposal.software.desc
  %tr
    %th State
    %td= @proposal.state
- if @proposal.config_items.size > 0
  %h2 Config items
%table
  - @proposal.config_items.each do |config_item|
    %tr
      %th= config_item.config_item_default.name
      %td= config_item.value
%h2 Node configs
- node_components_map = {}
- @proposal.node_configs.each {|node_config|
- node_components_map[node_config.node.name] = [] unless node_components_map.has_key? node_config.node.name
- node_components_map[node_config.node.name] << node_config.component.name
- }
%table
  - node_components_map.each do |node_name, component_names|
    - first = true
    - component_names.each do |component_name|
      %tr
        - if first
          - first = false
          <th rowspan=#{component_names.size}>#{node_name}
        %td= component_name
- if @proposal.component_configs.size > 0
  %h2 Component configs
%table
  - component_configs_map = {}
  - @proposal.component_configs.each {|component_config|
  - component_configs_map[component_config.component.name] = [] unless component_configs_map.has_key? component_config.component.name
  - component_configs_map[component_config.component.name] << component_config
  - }
  - component_configs_map.each do |component_name, component_configs|
    %tr
      %th.component_th{:colspan => "2"}= component_name
    - component_configs.each do |component_config|
      %tr
        %th
          = component_config.component_config_default.path
        %td= raw convert_to_html_tag component_config.content
- if @proposal.software_configs.size > 0
  %h2 Software configs
%table
  - @proposal.software_configs.each do |software_config|
    %tr
      %th
        = software_config.software_config_default.path
      %td= raw convert_to_html_tag software_config.content
.nav_link_group
  = link_to 'Edit', edit_proposal_path(@proposal)
  |
  \#{link_to 'Back', proposals_path}
